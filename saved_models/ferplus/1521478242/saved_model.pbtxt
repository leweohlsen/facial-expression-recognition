saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "ArgMax"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dimension"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "output_type"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "output_type"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "Conv2D"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Floor"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "ImageSummary"
        input_arg {
          name: "tag"
          type: DT_STRING
        }
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "max_images"
          type: "int"
          default_value {
            i: 3
          }
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_UINT8
              type: DT_FLOAT
              type: DT_HALF
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "bad_color"
          type: "tensor"
          default_value {
            tensor {
              dtype: DT_UINT8
              tensor_shape {
                dim {
                  size: 4
                }
              }
              int_val: 255
              int_val: 0
              int_val: 0
              int_val: 255
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "MaxPool"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_QINT8
            }
          }
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
              s: "NCHW_VECT_C"
            }
          }
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Softmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "softmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.6.0"
    tensorflow_git_version: "v1.6.0-0-gd2e24b6039"
  }
  graph_def {
    node {
      name: "global_step/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "global_step/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node {
      name: "global_step/Initializer/zeros"
      op: "Fill"
      input: "global_step/Initializer/zeros/shape_as_tensor"
      input: "global_step/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "global_step"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "global_step/Assign"
      op: "Assign"
      input: "global_step"
      input: "global_step/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "global_step/read"
      op: "Identity"
      input: "global_step"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2304
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 2304
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\3770\000\000\0000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/Reshape"
      op: "Reshape"
      input: "Placeholder"
      input: "ConvNet/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/img/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "ConvNet/img"
          }
        }
      }
    }
    node {
      name: "ConvNet/img"
      op: "ImageSummary"
      input: "ConvNet/img/tag"
      input: "ConvNet/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "bad_color"
        value {
          tensor {
            dtype: DT_UINT8
            tensor_shape {
              dim {
                size: 4
              }
            }
            int_val: 255
            int_val: 0
            int_val: 0
            int_val: 255
          }
        }
      }
      attr {
        key: "max_images"
        value {
          i: 3
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.14213381707668304
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.14213381707668304
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d/kernel"
      input: "ConvNet/conv2d/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d/bias"
      input: "ConvNet/conv2d/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d/Conv2D"
      op: "Conv2D"
      input: "ConvNet/Reshape"
      input: "ConvNet/conv2d/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d/Conv2D"
      input: "ConvNet/conv2d/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d/Relu"
      op: "Relu"
      input: "ConvNet/conv2d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.10206207633018494
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.10206207633018494
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_1/kernel"
      input: "ConvNet/conv2d_1/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_1/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_1/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_1/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_1/bias"
      input: "ConvNet/conv2d_1/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_1/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/Conv2D"
      op: "Conv2D"
      input: "ConvNet/conv2d/Relu"
      input: "ConvNet/conv2d_1/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_1/Conv2D"
      input: "ConvNet/conv2d_1/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_1/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/max_pooling2d/MaxPool"
      op: "MaxPool"
      input: "ConvNet/conv2d_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0833333358168602
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0833333358168602
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_2/kernel"
      input: "ConvNet/conv2d_2/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_2/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_2/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_2/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_2/bias"
      input: "ConvNet/conv2d_2/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_2/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/Conv2D"
      op: "Conv2D"
      input: "ConvNet/max_pooling2d/MaxPool"
      input: "ConvNet/conv2d_2/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_2/Conv2D"
      input: "ConvNet/conv2d_2/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_2/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.07216878235340118
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.07216878235340118
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_3/kernel"
      input: "ConvNet/conv2d_3/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_3/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_3/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_3/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_3/bias"
      input: "ConvNet/conv2d_3/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_3/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/Conv2D"
      op: "Conv2D"
      input: "ConvNet/conv2d_2/Relu"
      input: "ConvNet/conv2d_3/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_3/Conv2D"
      input: "ConvNet/conv2d_3/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_3/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_3/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/max_pooling2d_1/MaxPool"
      op: "MaxPool"
      input: "ConvNet/conv2d_3/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0589255653321743
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0589255653321743
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_4/kernel"
      input: "ConvNet/conv2d_4/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_4/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_4/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_4/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_4/bias"
      input: "ConvNet/conv2d_4/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_4/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/Conv2D"
      op: "Conv2D"
      input: "ConvNet/max_pooling2d_1/MaxPool"
      input: "ConvNet/conv2d_4/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_4/Conv2D"
      input: "ConvNet/conv2d_4/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_4/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_4/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.05103103816509247
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05103103816509247
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_5/kernel"
      input: "ConvNet/conv2d_5/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_5/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_5/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_5/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_5/bias"
      input: "ConvNet/conv2d_5/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_5/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/Conv2D"
      op: "Conv2D"
      input: "ConvNet/conv2d_4/Relu"
      input: "ConvNet/conv2d_5/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_5/Conv2D"
      input: "ConvNet/conv2d_5/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_5/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_5/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.05103103816509247
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05103103816509247
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_6/kernel"
      input: "ConvNet/conv2d_6/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_6/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_6/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_6/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_6/bias"
      input: "ConvNet/conv2d_6/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_6/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/Conv2D"
      op: "Conv2D"
      input: "ConvNet/conv2d_5/Relu"
      input: "ConvNet/conv2d_6/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_6/Conv2D"
      input: "ConvNet/conv2d_6/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_6/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_6/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/max_pooling2d_2/MaxPool"
      op: "MaxPool"
      input: "ConvNet/conv2d_6/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0416666679084301
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0416666679084301
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_7/kernel"
      input: "ConvNet/conv2d_7/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_7/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 256
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_7/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_7/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_7/bias"
      input: "ConvNet/conv2d_7/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_7/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/Conv2D"
      op: "Conv2D"
      input: "ConvNet/max_pooling2d_2/MaxPool"
      input: "ConvNet/conv2d_7/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_7/Conv2D"
      input: "ConvNet/conv2d_7/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_7/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_7/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.03608439117670059
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.03608439117670059
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 256
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_8/kernel"
      input: "ConvNet/conv2d_8/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_8/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 256
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_8/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_8/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_8/bias"
      input: "ConvNet/conv2d_8/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_8/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/Conv2D"
      op: "Conv2D"
      input: "ConvNet/conv2d_7/Relu"
      input: "ConvNet/conv2d_8/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_8/Conv2D"
      input: "ConvNet/conv2d_8/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_8/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_8/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.03608439117670059
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.03608439117670059
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/max"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 256
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_9/kernel"
      input: "ConvNet/conv2d_9/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/kernel/read"
      op: "Identity"
      input: "ConvNet/conv2d_9/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 256
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/conv2d_9/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/conv2d_9/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/bias/Assign"
      op: "Assign"
      input: "ConvNet/conv2d_9/bias"
      input: "ConvNet/conv2d_9/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/bias/read"
      op: "Identity"
      input: "ConvNet/conv2d_9/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/Conv2D"
      op: "Conv2D"
      input: "ConvNet/conv2d_8/Relu"
      input: "ConvNet/conv2d_9/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/conv2d_9/Conv2D"
      input: "ConvNet/conv2d_9/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/conv2d_9/Relu"
      op: "Relu"
      input: "ConvNet/conv2d_9/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/max_pooling2d_3/MaxPool"
      op: "MaxPool"
      input: "ConvNet/conv2d_9/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/Shape"
      op: "Shape"
      input: "ConvNet/max_pooling2d_3/MaxPool"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/strided_slice"
      op: "StridedSlice"
      input: "ConvNet/Flatten/flatten/Shape"
      input: "ConvNet/Flatten/flatten/strided_slice/stack"
      input: "ConvNet/Flatten/flatten/strided_slice/stack_1"
      input: "ConvNet/Flatten/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/Reshape/shape"
      op: "Pack"
      input: "ConvNet/Flatten/flatten/strided_slice"
      input: "ConvNet/Flatten/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/Flatten/flatten/Reshape"
      op: "Reshape"
      input: "ConvNet/max_pooling2d_3/MaxPool"
      input: "ConvNet/Flatten/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2304
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\t\000\000\000\004\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.04246038943529129
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.04246038943529129
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/dense/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/dense/kernel/Initializer/random_uniform/max"
      input: "ConvNet/dense/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/dense/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/dense/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/dense/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/dense/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 2304
            }
            dim {
              size: 1024
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/Assign"
      op: "Assign"
      input: "ConvNet/dense/kernel"
      input: "ConvNet/dense/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/dense/kernel/read"
      op: "Identity"
      input: "ConvNet/dense/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/dense/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/dense/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/dense/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1024
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/dense/bias/Assign"
      op: "Assign"
      input: "ConvNet/dense/bias"
      input: "ConvNet/dense/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/dense/bias/read"
      op: "Identity"
      input: "ConvNet/dense/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense/MatMul"
      op: "MatMul"
      input: "ConvNet/Flatten/flatten/Reshape"
      input: "ConvNet/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "ConvNet/dense/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/dense/MatMul"
      input: "ConvNet/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.75
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/Shape"
      op: "Shape"
      input: "ConvNet/dense/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/dropout/dropout/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/dropout/dropout/random_uniform/max"
      input: "ConvNet/dropout/dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/dropout/dropout/random_uniform/RandomUniform"
      input: "ConvNet/dropout/dropout/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/random_uniform"
      op: "Add"
      input: "ConvNet/dropout/dropout/random_uniform/mul"
      input: "ConvNet/dropout/dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/add"
      op: "Add"
      input: "ConvNet/dropout/dropout/keep_prob"
      input: "ConvNet/dropout/dropout/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/Floor"
      op: "Floor"
      input: "ConvNet/dropout/dropout/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/div"
      op: "RealDiv"
      input: "ConvNet/dense/BiasAdd"
      input: "ConvNet/dropout/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dropout/dropout/mul"
      op: "Mul"
      input: "ConvNet/dropout/dropout/div"
      input: "ConvNet/dropout/dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\004\000\000\007\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.07628625631332397
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.07628625631332397
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform/max"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform/RandomUniform"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform/mul"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1024
            }
            dim {
              size: 7
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/Assign"
      op: "Assign"
      input: "ConvNet/dense_1/kernel"
      input: "ConvNet/dense_1/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/dense_1/kernel/read"
      op: "Identity"
      input: "ConvNet/dense_1/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/bias/Initializer/zeros"
      op: "Fill"
      input: "ConvNet/dense_1/bias/Initializer/zeros/shape_as_tensor"
      input: "ConvNet/dense_1/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet/dense_1/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 7
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "ConvNet/dense_1/bias/Assign"
      op: "Assign"
      input: "ConvNet/dense_1/bias"
      input: "ConvNet/dense_1/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet/dense_1/bias/read"
      op: "Identity"
      input: "ConvNet/dense_1/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet/dense_1/MatMul"
      op: "MatMul"
      input: "ConvNet/dropout/dropout/mul"
      input: "ConvNet/dense_1/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "ConvNet/dense_1/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet/dense_1/MatMul"
      input: "ConvNet/dense_1/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\3770\000\000\0000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/Reshape"
      op: "Reshape"
      input: "Placeholder"
      input: "ConvNet_1/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/img/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "ConvNet_1/img"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/img"
      op: "ImageSummary"
      input: "ConvNet_1/img/tag"
      input: "ConvNet_1/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "bad_color"
        value {
          tensor {
            dtype: DT_UINT8
            tensor_shape {
              dim {
                size: 4
              }
            }
            int_val: 255
            int_val: 0
            int_val: 0
            int_val: 255
          }
        }
      }
      attr {
        key: "max_images"
        value {
          i: 3
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/Reshape"
      input: "ConvNet/conv2d/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d/Conv2D"
      input: "ConvNet/conv2d/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_1/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_1/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/conv2d/Relu"
      input: "ConvNet/conv2d_1/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_1/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_1/Conv2D"
      input: "ConvNet/conv2d_1/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_1/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 48
              }
              dim {
                size: 48
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/max_pooling2d/MaxPool"
      op: "MaxPool"
      input: "ConvNet_1/conv2d_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_2/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_2/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/max_pooling2d/MaxPool"
      input: "ConvNet/conv2d_2/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_2/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_2/Conv2D"
      input: "ConvNet/conv2d_2/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_2/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_3/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_3/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/conv2d_2/Relu"
      input: "ConvNet/conv2d_3/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_3/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_3/Conv2D"
      input: "ConvNet/conv2d_3/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_3/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_3/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 24
              }
              dim {
                size: 24
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/max_pooling2d_1/MaxPool"
      op: "MaxPool"
      input: "ConvNet_1/conv2d_3/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_4/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_4/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/max_pooling2d_1/MaxPool"
      input: "ConvNet/conv2d_4/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_4/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_4/Conv2D"
      input: "ConvNet/conv2d_4/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_4/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_4/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_5/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_5/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/conv2d_4/Relu"
      input: "ConvNet/conv2d_5/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_5/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_5/Conv2D"
      input: "ConvNet/conv2d_5/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_5/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_5/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_6/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_6/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/conv2d_5/Relu"
      input: "ConvNet/conv2d_6/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_6/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_6/Conv2D"
      input: "ConvNet/conv2d_6/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_6/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_6/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
              dim {
                size: 12
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/max_pooling2d_2/MaxPool"
      op: "MaxPool"
      input: "ConvNet_1/conv2d_6/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_7/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_7/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/max_pooling2d_2/MaxPool"
      input: "ConvNet/conv2d_7/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_7/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_7/Conv2D"
      input: "ConvNet/conv2d_7/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_7/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_7/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_8/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_8/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/conv2d_7/Relu"
      input: "ConvNet/conv2d_8/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_8/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_8/Conv2D"
      input: "ConvNet/conv2d_8/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_8/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_8/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_9/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_9/Conv2D"
      op: "Conv2D"
      input: "ConvNet_1/conv2d_8/Relu"
      input: "ConvNet/conv2d_9/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_9/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/conv2d_9/Conv2D"
      input: "ConvNet/conv2d_9/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/conv2d_9/Relu"
      op: "Relu"
      input: "ConvNet_1/conv2d_9/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
              dim {
                size: 6
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/max_pooling2d_3/MaxPool"
      op: "MaxPool"
      input: "ConvNet_1/conv2d_9/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/Shape"
      op: "Shape"
      input: "ConvNet_1/max_pooling2d_3/MaxPool"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/strided_slice"
      op: "StridedSlice"
      input: "ConvNet_1/Flatten/flatten/Shape"
      input: "ConvNet_1/Flatten/flatten/strided_slice/stack"
      input: "ConvNet_1/Flatten/flatten/strided_slice/stack_1"
      input: "ConvNet_1/Flatten/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/Reshape/shape"
      op: "Pack"
      input: "ConvNet_1/Flatten/flatten/strided_slice"
      input: "ConvNet_1/Flatten/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ConvNet_1/Flatten/flatten/Reshape"
      op: "Reshape"
      input: "ConvNet_1/max_pooling2d_3/MaxPool"
      input: "ConvNet_1/Flatten/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2304
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/dense/MatMul"
      op: "MatMul"
      input: "ConvNet_1/Flatten/flatten/Reshape"
      input: "ConvNet/dense/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "ConvNet_1/dense/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/dense/MatMul"
      input: "ConvNet/dense/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ConvNet_1/dropout/Identity"
      op: "Identity"
      input: "ConvNet_1/dense/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "ConvNet_1/dense_1/MatMul"
      op: "MatMul"
      input: "ConvNet_1/dropout/Identity"
      input: "ConvNet/dense_1/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "ConvNet_1/dense_1/BiasAdd"
      op: "BiasAdd"
      input: "ConvNet_1/dense_1/MatMul"
      input: "ConvNet/dense_1/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ArgMax/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "ArgMax"
      op: "ArgMax"
      input: "ConvNet_1/dense_1/BiasAdd"
      input: "ArgMax/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Softmax"
      op: "Softmax"
      input: "ConvNet_1/dense_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_aec34a8d0b474205816b1953dabb5732/part"
          }
        }
      }
    }
    node {
      name: "save/StringJoin"
      op: "StringJoin"
      input: "save/Const"
      input: "save/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename"
      op: "ShardedFilename"
      input: "save/StringJoin"
      input: "save/ShardedFilename/shard"
      input: "save/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: "ConvNet/conv2d/bias"
            string_val: "ConvNet/conv2d/kernel"
            string_val: "ConvNet/conv2d_1/bias"
            string_val: "ConvNet/conv2d_1/kernel"
            string_val: "ConvNet/conv2d_2/bias"
            string_val: "ConvNet/conv2d_2/kernel"
            string_val: "ConvNet/conv2d_3/bias"
            string_val: "ConvNet/conv2d_3/kernel"
            string_val: "ConvNet/conv2d_4/bias"
            string_val: "ConvNet/conv2d_4/kernel"
            string_val: "ConvNet/conv2d_5/bias"
            string_val: "ConvNet/conv2d_5/kernel"
            string_val: "ConvNet/conv2d_6/bias"
            string_val: "ConvNet/conv2d_6/kernel"
            string_val: "ConvNet/conv2d_7/bias"
            string_val: "ConvNet/conv2d_7/kernel"
            string_val: "ConvNet/conv2d_8/bias"
            string_val: "ConvNet/conv2d_8/kernel"
            string_val: "ConvNet/conv2d_9/bias"
            string_val: "ConvNet/conv2d_9/kernel"
            string_val: "ConvNet/dense/bias"
            string_val: "ConvNet/dense/kernel"
            string_val: "ConvNet/dense_1/bias"
            string_val: "ConvNet/dense_1/kernel"
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/ShardedFilename"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "ConvNet/conv2d/bias"
      input: "ConvNet/conv2d/kernel"
      input: "ConvNet/conv2d_1/bias"
      input: "ConvNet/conv2d_1/kernel"
      input: "ConvNet/conv2d_2/bias"
      input: "ConvNet/conv2d_2/kernel"
      input: "ConvNet/conv2d_3/bias"
      input: "ConvNet/conv2d_3/kernel"
      input: "ConvNet/conv2d_4/bias"
      input: "ConvNet/conv2d_4/kernel"
      input: "ConvNet/conv2d_5/bias"
      input: "ConvNet/conv2d_5/kernel"
      input: "ConvNet/conv2d_6/bias"
      input: "ConvNet/conv2d_6/kernel"
      input: "ConvNet/conv2d_7/bias"
      input: "ConvNet/conv2d_7/kernel"
      input: "ConvNet/conv2d_8/bias"
      input: "ConvNet/conv2d_8/kernel"
      input: "ConvNet/conv2d_9/bias"
      input: "ConvNet/conv2d_9/kernel"
      input: "ConvNet/dense/bias"
      input: "ConvNet/dense/kernel"
      input: "ConvNet/dense_1/bias"
      input: "ConvNet/dense_1/kernel"
      input: "global_step"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/ShardedFilename"
      input: "^save/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save/ShardedFilename"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Identity"
      op: "Identity"
      input: "save/Const"
      input: "^save/control_dependency"
      input: "^save/MergeV2Checkpoints"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: "ConvNet/conv2d/bias"
            string_val: "ConvNet/conv2d/kernel"
            string_val: "ConvNet/conv2d_1/bias"
            string_val: "ConvNet/conv2d_1/kernel"
            string_val: "ConvNet/conv2d_2/bias"
            string_val: "ConvNet/conv2d_2/kernel"
            string_val: "ConvNet/conv2d_3/bias"
            string_val: "ConvNet/conv2d_3/kernel"
            string_val: "ConvNet/conv2d_4/bias"
            string_val: "ConvNet/conv2d_4/kernel"
            string_val: "ConvNet/conv2d_5/bias"
            string_val: "ConvNet/conv2d_5/kernel"
            string_val: "ConvNet/conv2d_6/bias"
            string_val: "ConvNet/conv2d_6/kernel"
            string_val: "ConvNet/conv2d_7/bias"
            string_val: "ConvNet/conv2d_7/kernel"
            string_val: "ConvNet/conv2d_8/bias"
            string_val: "ConvNet/conv2d_8/kernel"
            string_val: "ConvNet/conv2d_9/bias"
            string_val: "ConvNet/conv2d_9/kernel"
            string_val: "ConvNet/dense/bias"
            string_val: "ConvNet/dense/kernel"
            string_val: "ConvNet/dense_1/bias"
            string_val: "ConvNet/dense_1/kernel"
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "ConvNet/conv2d/bias"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "ConvNet/conv2d/kernel"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "ConvNet/conv2d_1/bias"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "ConvNet/conv2d_1/kernel"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "ConvNet/conv2d_2/bias"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "ConvNet/conv2d_2/kernel"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "ConvNet/conv2d_3/bias"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "ConvNet/conv2d_3/kernel"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "ConvNet/conv2d_4/bias"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "ConvNet/conv2d_4/kernel"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "ConvNet/conv2d_5/bias"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "ConvNet/conv2d_5/kernel"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "ConvNet/conv2d_6/bias"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "ConvNet/conv2d_6/kernel"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "ConvNet/conv2d_7/bias"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "ConvNet/conv2d_7/kernel"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "ConvNet/conv2d_8/bias"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "ConvNet/conv2d_8/kernel"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "ConvNet/conv2d_9/bias"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "ConvNet/conv2d_9/kernel"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "ConvNet/dense/bias"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "ConvNet/dense/kernel"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "ConvNet/dense_1/bias"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "ConvNet/dense_1/kernel"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "global_step"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_shard"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_2"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/restore_shard"
    }
    node {
      name: "init"
      op: "NoOp"
    }
    node {
      name: "init_all_tables"
      op: "NoOp"
    }
    node {
      name: "init_1"
      op: "NoOp"
    }
    node {
      name: "group_deps"
      op: "NoOp"
      input: "^init"
      input: "^init_all_tables"
      input: "^init_1"
    }
    node {
      name: "save_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_ac04475add5f4e19aa1d8f3398b961ea/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: "ConvNet/conv2d/bias"
            string_val: "ConvNet/conv2d/kernel"
            string_val: "ConvNet/conv2d_1/bias"
            string_val: "ConvNet/conv2d_1/kernel"
            string_val: "ConvNet/conv2d_2/bias"
            string_val: "ConvNet/conv2d_2/kernel"
            string_val: "ConvNet/conv2d_3/bias"
            string_val: "ConvNet/conv2d_3/kernel"
            string_val: "ConvNet/conv2d_4/bias"
            string_val: "ConvNet/conv2d_4/kernel"
            string_val: "ConvNet/conv2d_5/bias"
            string_val: "ConvNet/conv2d_5/kernel"
            string_val: "ConvNet/conv2d_6/bias"
            string_val: "ConvNet/conv2d_6/kernel"
            string_val: "ConvNet/conv2d_7/bias"
            string_val: "ConvNet/conv2d_7/kernel"
            string_val: "ConvNet/conv2d_8/bias"
            string_val: "ConvNet/conv2d_8/kernel"
            string_val: "ConvNet/conv2d_9/bias"
            string_val: "ConvNet/conv2d_9/kernel"
            string_val: "ConvNet/dense/bias"
            string_val: "ConvNet/dense/kernel"
            string_val: "ConvNet/dense_1/bias"
            string_val: "ConvNet/dense_1/kernel"
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "ConvNet/conv2d/bias"
      input: "ConvNet/conv2d/kernel"
      input: "ConvNet/conv2d_1/bias"
      input: "ConvNet/conv2d_1/kernel"
      input: "ConvNet/conv2d_2/bias"
      input: "ConvNet/conv2d_2/kernel"
      input: "ConvNet/conv2d_3/bias"
      input: "ConvNet/conv2d_3/kernel"
      input: "ConvNet/conv2d_4/bias"
      input: "ConvNet/conv2d_4/kernel"
      input: "ConvNet/conv2d_5/bias"
      input: "ConvNet/conv2d_5/kernel"
      input: "ConvNet/conv2d_6/bias"
      input: "ConvNet/conv2d_6/kernel"
      input: "ConvNet/conv2d_7/bias"
      input: "ConvNet/conv2d_7/kernel"
      input: "ConvNet/conv2d_8/bias"
      input: "ConvNet/conv2d_8/kernel"
      input: "ConvNet/conv2d_9/bias"
      input: "ConvNet/conv2d_9/kernel"
      input: "ConvNet/dense/bias"
      input: "ConvNet/dense/kernel"
      input: "ConvNet/dense_1/bias"
      input: "ConvNet/dense_1/kernel"
      input: "global_step"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/control_dependency"
      input: "^save_1/MergeV2Checkpoints"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: "ConvNet/conv2d/bias"
            string_val: "ConvNet/conv2d/kernel"
            string_val: "ConvNet/conv2d_1/bias"
            string_val: "ConvNet/conv2d_1/kernel"
            string_val: "ConvNet/conv2d_2/bias"
            string_val: "ConvNet/conv2d_2/kernel"
            string_val: "ConvNet/conv2d_3/bias"
            string_val: "ConvNet/conv2d_3/kernel"
            string_val: "ConvNet/conv2d_4/bias"
            string_val: "ConvNet/conv2d_4/kernel"
            string_val: "ConvNet/conv2d_5/bias"
            string_val: "ConvNet/conv2d_5/kernel"
            string_val: "ConvNet/conv2d_6/bias"
            string_val: "ConvNet/conv2d_6/kernel"
            string_val: "ConvNet/conv2d_7/bias"
            string_val: "ConvNet/conv2d_7/kernel"
            string_val: "ConvNet/conv2d_8/bias"
            string_val: "ConvNet/conv2d_8/kernel"
            string_val: "ConvNet/conv2d_9/bias"
            string_val: "ConvNet/conv2d_9/kernel"
            string_val: "ConvNet/dense/bias"
            string_val: "ConvNet/dense/kernel"
            string_val: "ConvNet/dense_1/bias"
            string_val: "ConvNet/dense_1/kernel"
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 25
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "ConvNet/conv2d/bias"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "ConvNet/conv2d/kernel"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "ConvNet/conv2d_1/bias"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "ConvNet/conv2d_1/kernel"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "ConvNet/conv2d_2/bias"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "ConvNet/conv2d_2/kernel"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "ConvNet/conv2d_3/bias"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "ConvNet/conv2d_3/kernel"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "ConvNet/conv2d_4/bias"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "ConvNet/conv2d_4/kernel"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "ConvNet/conv2d_5/bias"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "ConvNet/conv2d_5/kernel"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_5/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "ConvNet/conv2d_6/bias"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "ConvNet/conv2d_6/kernel"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_6/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "ConvNet/conv2d_7/bias"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "ConvNet/conv2d_7/kernel"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_7/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "ConvNet/conv2d_8/bias"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "ConvNet/conv2d_8/kernel"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_8/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "ConvNet/conv2d_9/bias"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "ConvNet/conv2d_9/kernel"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/conv2d_9/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 256
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "ConvNet/dense/bias"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "ConvNet/dense/kernel"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2304
              }
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "ConvNet/dense_1/bias"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "ConvNet/dense_1/kernel"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@ConvNet/dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "global_step"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    versions {
      producer: 26
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "global_step"
    value {
      node_list {
        value: "global_step:0"
      }
    }
  }
  collection_def {
    key: "legacy_init_op"
    value {
      node_list {
        value: "group_deps"
      }
    }
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "ConvNet/img:0"
        value: "ConvNet_1/img:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\027ConvNet/conv2d/kernel:0\022\034ConvNet/conv2d/kernel/Assign\032\034ConvNet/conv2d/kernel/read:022ConvNet/conv2d/kernel/Initializer/random_uniform:0"
        value: "\n\025ConvNet/conv2d/bias:0\022\032ConvNet/conv2d/bias/Assign\032\032ConvNet/conv2d/bias/read:02\'ConvNet/conv2d/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_1/kernel:0\022\036ConvNet/conv2d_1/kernel/Assign\032\036ConvNet/conv2d_1/kernel/read:024ConvNet/conv2d_1/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_1/bias:0\022\034ConvNet/conv2d_1/bias/Assign\032\034ConvNet/conv2d_1/bias/read:02)ConvNet/conv2d_1/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_2/kernel:0\022\036ConvNet/conv2d_2/kernel/Assign\032\036ConvNet/conv2d_2/kernel/read:024ConvNet/conv2d_2/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_2/bias:0\022\034ConvNet/conv2d_2/bias/Assign\032\034ConvNet/conv2d_2/bias/read:02)ConvNet/conv2d_2/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_3/kernel:0\022\036ConvNet/conv2d_3/kernel/Assign\032\036ConvNet/conv2d_3/kernel/read:024ConvNet/conv2d_3/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_3/bias:0\022\034ConvNet/conv2d_3/bias/Assign\032\034ConvNet/conv2d_3/bias/read:02)ConvNet/conv2d_3/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_4/kernel:0\022\036ConvNet/conv2d_4/kernel/Assign\032\036ConvNet/conv2d_4/kernel/read:024ConvNet/conv2d_4/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_4/bias:0\022\034ConvNet/conv2d_4/bias/Assign\032\034ConvNet/conv2d_4/bias/read:02)ConvNet/conv2d_4/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_5/kernel:0\022\036ConvNet/conv2d_5/kernel/Assign\032\036ConvNet/conv2d_5/kernel/read:024ConvNet/conv2d_5/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_5/bias:0\022\034ConvNet/conv2d_5/bias/Assign\032\034ConvNet/conv2d_5/bias/read:02)ConvNet/conv2d_5/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_6/kernel:0\022\036ConvNet/conv2d_6/kernel/Assign\032\036ConvNet/conv2d_6/kernel/read:024ConvNet/conv2d_6/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_6/bias:0\022\034ConvNet/conv2d_6/bias/Assign\032\034ConvNet/conv2d_6/bias/read:02)ConvNet/conv2d_6/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_7/kernel:0\022\036ConvNet/conv2d_7/kernel/Assign\032\036ConvNet/conv2d_7/kernel/read:024ConvNet/conv2d_7/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_7/bias:0\022\034ConvNet/conv2d_7/bias/Assign\032\034ConvNet/conv2d_7/bias/read:02)ConvNet/conv2d_7/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_8/kernel:0\022\036ConvNet/conv2d_8/kernel/Assign\032\036ConvNet/conv2d_8/kernel/read:024ConvNet/conv2d_8/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_8/bias:0\022\034ConvNet/conv2d_8/bias/Assign\032\034ConvNet/conv2d_8/bias/read:02)ConvNet/conv2d_8/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_9/kernel:0\022\036ConvNet/conv2d_9/kernel/Assign\032\036ConvNet/conv2d_9/kernel/read:024ConvNet/conv2d_9/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_9/bias:0\022\034ConvNet/conv2d_9/bias/Assign\032\034ConvNet/conv2d_9/bias/read:02)ConvNet/conv2d_9/bias/Initializer/zeros:0"
        value: "\n\026ConvNet/dense/kernel:0\022\033ConvNet/dense/kernel/Assign\032\033ConvNet/dense/kernel/read:021ConvNet/dense/kernel/Initializer/random_uniform:0"
        value: "\n\024ConvNet/dense/bias:0\022\031ConvNet/dense/bias/Assign\032\031ConvNet/dense/bias/read:02&ConvNet/dense/bias/Initializer/zeros:0"
        value: "\n\030ConvNet/dense_1/kernel:0\022\035ConvNet/dense_1/kernel/Assign\032\035ConvNet/dense_1/kernel/read:023ConvNet/dense_1/kernel/Initializer/random_uniform:0"
        value: "\n\026ConvNet/dense_1/bias:0\022\033ConvNet/dense_1/bias/Assign\032\033ConvNet/dense_1/bias/read:02(ConvNet/dense_1/bias/Initializer/zeros:0"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\rglobal_step:0\022\022global_step/Assign\032\022global_step/read:02\037global_step/Initializer/zeros:0"
        value: "\n\027ConvNet/conv2d/kernel:0\022\034ConvNet/conv2d/kernel/Assign\032\034ConvNet/conv2d/kernel/read:022ConvNet/conv2d/kernel/Initializer/random_uniform:0"
        value: "\n\025ConvNet/conv2d/bias:0\022\032ConvNet/conv2d/bias/Assign\032\032ConvNet/conv2d/bias/read:02\'ConvNet/conv2d/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_1/kernel:0\022\036ConvNet/conv2d_1/kernel/Assign\032\036ConvNet/conv2d_1/kernel/read:024ConvNet/conv2d_1/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_1/bias:0\022\034ConvNet/conv2d_1/bias/Assign\032\034ConvNet/conv2d_1/bias/read:02)ConvNet/conv2d_1/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_2/kernel:0\022\036ConvNet/conv2d_2/kernel/Assign\032\036ConvNet/conv2d_2/kernel/read:024ConvNet/conv2d_2/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_2/bias:0\022\034ConvNet/conv2d_2/bias/Assign\032\034ConvNet/conv2d_2/bias/read:02)ConvNet/conv2d_2/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_3/kernel:0\022\036ConvNet/conv2d_3/kernel/Assign\032\036ConvNet/conv2d_3/kernel/read:024ConvNet/conv2d_3/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_3/bias:0\022\034ConvNet/conv2d_3/bias/Assign\032\034ConvNet/conv2d_3/bias/read:02)ConvNet/conv2d_3/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_4/kernel:0\022\036ConvNet/conv2d_4/kernel/Assign\032\036ConvNet/conv2d_4/kernel/read:024ConvNet/conv2d_4/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_4/bias:0\022\034ConvNet/conv2d_4/bias/Assign\032\034ConvNet/conv2d_4/bias/read:02)ConvNet/conv2d_4/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_5/kernel:0\022\036ConvNet/conv2d_5/kernel/Assign\032\036ConvNet/conv2d_5/kernel/read:024ConvNet/conv2d_5/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_5/bias:0\022\034ConvNet/conv2d_5/bias/Assign\032\034ConvNet/conv2d_5/bias/read:02)ConvNet/conv2d_5/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_6/kernel:0\022\036ConvNet/conv2d_6/kernel/Assign\032\036ConvNet/conv2d_6/kernel/read:024ConvNet/conv2d_6/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_6/bias:0\022\034ConvNet/conv2d_6/bias/Assign\032\034ConvNet/conv2d_6/bias/read:02)ConvNet/conv2d_6/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_7/kernel:0\022\036ConvNet/conv2d_7/kernel/Assign\032\036ConvNet/conv2d_7/kernel/read:024ConvNet/conv2d_7/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_7/bias:0\022\034ConvNet/conv2d_7/bias/Assign\032\034ConvNet/conv2d_7/bias/read:02)ConvNet/conv2d_7/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_8/kernel:0\022\036ConvNet/conv2d_8/kernel/Assign\032\036ConvNet/conv2d_8/kernel/read:024ConvNet/conv2d_8/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_8/bias:0\022\034ConvNet/conv2d_8/bias/Assign\032\034ConvNet/conv2d_8/bias/read:02)ConvNet/conv2d_8/bias/Initializer/zeros:0"
        value: "\n\031ConvNet/conv2d_9/kernel:0\022\036ConvNet/conv2d_9/kernel/Assign\032\036ConvNet/conv2d_9/kernel/read:024ConvNet/conv2d_9/kernel/Initializer/random_uniform:0"
        value: "\n\027ConvNet/conv2d_9/bias:0\022\034ConvNet/conv2d_9/bias/Assign\032\034ConvNet/conv2d_9/bias/read:02)ConvNet/conv2d_9/bias/Initializer/zeros:0"
        value: "\n\026ConvNet/dense/kernel:0\022\033ConvNet/dense/kernel/Assign\032\033ConvNet/dense/kernel/read:021ConvNet/dense/kernel/Initializer/random_uniform:0"
        value: "\n\024ConvNet/dense/bias:0\022\031ConvNet/dense/bias/Assign\032\031ConvNet/dense/bias/read:02&ConvNet/dense/bias/Initializer/zeros:0"
        value: "\n\030ConvNet/dense_1/kernel:0\022\035ConvNet/dense_1/kernel/Assign\032\035ConvNet/dense_1/kernel/read:023ConvNet/dense_1/kernel/Initializer/random_uniform:0"
        value: "\n\026ConvNet/dense_1/bias:0\022\033ConvNet/dense_1/bias/Assign\032\033ConvNet/dense_1/bias/read:02(ConvNet/dense_1/bias/Initializer/zeros:0"
      }
    }
  }
  signature_def {
    key: "classes"
    value {
      inputs {
        key: "images"
        value {
          name: "Placeholder:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 2304
            }
          }
        }
      }
      outputs {
        key: "output"
        value {
          name: "ArgMax:0"
          dtype: DT_INT64
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "images"
        value {
          name: "Placeholder:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 2304
            }
          }
        }
      }
      outputs {
        key: "output"
        value {
          name: "ArgMax:0"
          dtype: DT_INT64
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
